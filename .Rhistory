means <- data.frame(ID=my_data[,1], Means=rowMeans(my_data[,-1], na.rm=TRUE))
means <- means %>% mutate(Above = means$Means*1.25, Below = means$Means*0.75)
my_data <- as.data.frame(my_data)
my_data[1, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "January", my_data$`2020`[1]+total, my_data$`2020`[1]+0)
my_data[2, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "February", my_data$`2020`[2]+total, my_data$`2020`[2]+0)
my_data[3, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "March", my_data$`2020`[3]+total, my_data$`2020`[3]+0)
my_data[4, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "April", my_data$`2020`[4]+total, my_data$`2020`[4]+0)
my_data[5, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "May", my_data$`2020`[5]+total, my_data$`2020`[5]+0)
my_data[6, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "June", my_data$`2020`[6]+total, my_data$`2020`[6]+0)
my_data[7, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "July", my_data$`2020`[7]+total, my_data$`2020`[7]+0)
my_data[8, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "August", my_data$`2020`[8]+total, my_data$`2020`[8]+0)
my_data[9, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "September", my_data$`2020`[9]+total, my_data$`2020`[9]+0)
my_data[10, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "October", my_data$`2020`[10]+total, my_data$`2020`[10]+0)
my_data[11, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "November", my_data$`2020`[11]+total, my_data$`2020`[11]+0)
my_data[12, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "December", my_data$`2020`[12]+total, my_data$`2020`[12]+0)
save_data <- my_data
save_data
site <- "https://afghanistan.iom.int/hap-reports"
webpage <- read_html(site) %>% html_nodes(xpath = '//*[@id="block-views-1f641f11609969c129467338bd047b2e"]') %>% html_nodes("a") %>% html_attr("href")
web <- webpage[1]
date1 <- pdf_text(web)[1] %>% str_split("\r\n", simplify = TRUE)
date2 <- match(date1  %>% grep('Period:', ., value = T), date1)
#Trim the space first before splitting the string
#date <- date1[,date2+1] %>% trimws() %>% str_split("              ", simplify = TRUE)
date <- date1[,date2+1] %>% str_split("\\s{2,}", simplify = TRUE) %>% last() %>% trimws()
month1 <- date %>% str_split(" ", simplify = TRUE)
month2 <- month1[2]
lastupdate<-paste("Last update: ", date)
data1 <- pdf_text(web)
data2 <- match(data1 %>% grep('Natural Disaster Initial Incident Information Summary', ., value = T), data1)
data3 <- data1[data2] %>% str_split("\r\n", simplify = TRUE) %>% grep('Flood ', ., value = T)
data4 <- gsub("(?<=[\\s])\\s*|^\\s+|\\s+$", "", data3, perl=TRUE)
data5 <- data4 %>% map(. %>% str_match("Flood.* (.*?)"))
data6 <- data5 %>% map(. %>% str_split(" ", simplify = TRUE))
data7 <- sapply(data6, "[[", 5)
data8 <- gsub(",","",data7)
total <- as.numeric(data8) %>% sum
my_data <- read_excel(paste0(mypath,"Afghanistan_floods.xlsx"))
my_data[1] <- NULL
my_data_date <- my_data
new_cases <- ifelse(date != my_data_date[13,10], total, 0)
savenewcases<-paste("New Cases: ", new_cases)
my_data <- my_data[-c(13), ]
my_data <- transform(my_data, `2020` = as.numeric(`2020`))
my_data <- my_data %>% dplyr::rename( "2012" =  "X2012", "2013" =  "X2013", "2014" =  "X2014", "2015" =  "X2015", "2016" =  "X2016", "2017" =  "X2017", "2018" =  "X2018", "2019" =  "X2019", "2020" =  "X2020")
means <- data.frame(ID=my_data[,1], Means=rowMeans(my_data[,-1], na.rm=TRUE))
means <- means %>% mutate(Above = means$Means*1.25, Below = means$Means*0.75)
my_data <- as.data.frame(my_data)
my_data[1, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "January", my_data$`2020`[1]+total, my_data$`2020`[1]+0)
my_data[2, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "February", my_data$`2020`[2]+total, my_data$`2020`[2]+0)
my_data[3, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "March", my_data$`2020`[3]+total, my_data$`2020`[3]+0)
my_data[4, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "April", my_data$`2020`[4]+total, my_data$`2020`[4]+0)
my_data[5, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "May", my_data$`2020`[5]+total, my_data$`2020`[5]+0)
my_data[6, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "Jun", my_data$`2020`[6]+total, my_data$`2020`[6]+0)
my_data[7, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "July", my_data$`2020`[7]+total, my_data$`2020`[7]+0)
my_data[8, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "August", my_data$`2020`[8]+total, my_data$`2020`[8]+0)
my_data[9, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "September", my_data$`2020`[9]+total, my_data$`2020`[9]+0)
my_data[10, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "October", my_data$`2020`[10]+total, my_data$`2020`[10]+0)
my_data[11, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "November", my_data$`2020`[11]+total, my_data$`2020`[11]+0)
my_data[12, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "December", my_data$`2020`[12]+total, my_data$`2020`[12]+0)
save_data <- my_data
save_data
web
save_data <- my_data
saveRDS(save_data, file = paste0(mypath,"Afghanistan_floods_ggplot.Rdata"))
my_data[13, '2020'] <- date
data_date_afghanistan_floods <- my_data
write.xlsx(data_date_afghanistan_floods, paste0(mypath,"Afghanistan_floods.xlsx"), sheetName="Sheet1",
col.names=TRUE, row.names=TRUE, append=FALSE)
write.xlsx(data_date_afghanistan_floods, paste0(mypath,"Afghanistan_floods.xlsx"), sheetName="Sheet1",
col.names=TRUE, row.names=TRUE, append=FALSE)
my_data <- my_data[-c(13), ]
my_data <- transform(my_data, `2020` = as.numeric(`2020`))
my_data <- my_data %>% dplyr::rename( "2012" =  "X2012", "2013" =  "X2013", "2014" =  "X2014", "2015" =  "X2015", "2016" =  "X2016", "2017" =  "X2017", "2018" =  "X2018", "2019" =  "X2019", "2020" =  "X2020")
means$ID<- as.character(means$ID)
my_data <- inner_join(my_data,means, by=c("Month"="ID"))
my_data$twelve_mean <- ifelse(my_data$`2012` > my_data$Above, 2,
ifelse(my_data$`2012` < my_data$Below, 0,
1))
my_data$thirten_mean <- ifelse(my_data$`2013` > my_data$Above, 2,
ifelse(my_data$`2013` < my_data$Below, 0,
1))
my_data$fourten_mean <- ifelse(my_data$`2014` > my_data$Above, 2,
ifelse(my_data$`2014` < my_data$Below, 0,
1))
my_data$fiveten_mean <- ifelse(my_data$`2015` > my_data$Above, 2,
ifelse(my_data$`2015` < my_data$Below, 0,
1))
my_data$sixten_mean <- ifelse(my_data$`2016` > my_data$Above, 2,
ifelse(my_data$`2016` < my_data$Below, 0,
1))
my_data$seventen_mean <- ifelse(my_data$`2017` > my_data$Above, 2,
ifelse(my_data$`2017` < my_data$Below, 0,
1))
my_data$eigthten_mean <- ifelse(my_data$`2018` > my_data$Above, 2,
ifelse(my_data$`2018` < my_data$Below, 0,
1))
my_data$nineten_mean <- ifelse(my_data$`2019` > my_data$Above, 2,
ifelse(my_data$`2019` < my_data$Below, 0,
1))
my_data$twente_mean <- ifelse(my_data$`2020` > my_data$Above, 2,
ifelse(my_data$`2020` < my_data$Below, 0,
1))
#save the processed data
my_data<- dplyr::select(my_data,-c(Means,Above,Below))
#last update date and new cases number into the last two rows. This will be used in rmarkdown
my_data[13,1]<-lastupdate
my_data[14,1]<-savenewcases
saveRDS(my_data, file = paste0(mypath,"afghanistan_floods.Rdata"))
lastupdate
savenewcases
#Calling afghanistan_floods
tryCatchLog(afghanistan_floods(),error = function(e) {})
#' Creating a function to wrap Afghanistan Flood extaction
#'Beginning of afghanistan_floods function
afghanistan_floods <- function(){
site <- "https://afghanistan.iom.int/hap-reports"
webpage <- read_html(site) %>% html_nodes(xpath = '//*[@id="block-views-1f641f11609969c129467338bd047b2e"]') %>% html_nodes("a") %>% html_attr("href")
web <- webpage[1]
date1 <- pdf_text(web)[1] %>% str_split("\r\n", simplify = TRUE)
date2 <- match(date1  %>% grep('Period:', ., value = T), date1)
#Trim the space first before splitting the string
#date <- date1[,date2+1] %>% trimws() %>% str_split("              ", simplify = TRUE)
date <- date1[,date2+1] %>% str_split("\\s{2,}", simplify = TRUE) %>% last() %>% trimws()
#grab the last column of the matrix
#date<-date[,ncol(date)]
month1 <- date %>% str_split(" ", simplify = TRUE)
month2 <- month1[2]
lastupdate<-paste("Last update: ", date)
data1 <- pdf_text(web)
data2 <- match(data1 %>% grep('Natural Disaster Initial Incident Information Summary', ., value = T), data1)
data3 <- data1[data2] %>% str_split("\r\n", simplify = TRUE) %>% grep('Flood ', ., value = T)
data4 <- gsub("(?<=[\\s])\\s*|^\\s+|\\s+$", "", data3, perl=TRUE)
data5 <- data4 %>% map(. %>% str_match("Flood.* (.*?)"))
data6 <- data5 %>% map(. %>% str_split(" ", simplify = TRUE))
data7 <- sapply(data6, "[[", 5)
data8 <- gsub(",","",data7)
total <- as.numeric(data8) %>% sum
my_data <- read_excel(paste0(mypath,"Afghanistan_floods.xlsx"))
my_data[1] <- NULL
my_data_date <- my_data
new_cases <- ifelse(date != my_data_date[13,10], total, 0)
savenewcases<-paste("New Cases: ", new_cases)
my_data <- my_data[-c(13), ]
my_data <- transform(my_data, `2020` = as.numeric(`2020`))
my_data <- my_data %>% dplyr::rename( "2012" =  "X2012", "2013" =  "X2013", "2014" =  "X2014", "2015" =  "X2015", "2016" =  "X2016", "2017" =  "X2017", "2018" =  "X2018", "2019" =  "X2019", "2020" =  "X2020")
means <- data.frame(ID=my_data[,1], Means=rowMeans(my_data[,-1], na.rm=TRUE))
means <- means %>% mutate(Above = means$Means*1.25, Below = means$Means*0.75)
my_data <- as.data.frame(my_data)
my_data[1, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "January", my_data$`2020`[1]+total, my_data$`2020`[1]+0)
my_data[2, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "February", my_data$`2020`[2]+total, my_data$`2020`[2]+0)
my_data[3, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "March", my_data$`2020`[3]+total, my_data$`2020`[3]+0)
my_data[4, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "April", my_data$`2020`[4]+total, my_data$`2020`[4]+0)
my_data[5, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "May", my_data$`2020`[5]+total, my_data$`2020`[5]+0)
my_data[6, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "Jun", my_data$`2020`[6]+total, my_data$`2020`[6]+0)
my_data[7, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "July", my_data$`2020`[7]+total, my_data$`2020`[7]+0)
my_data[8, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "August", my_data$`2020`[8]+total, my_data$`2020`[8]+0)
my_data[9, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "September", my_data$`2020`[9]+total, my_data$`2020`[9]+0)
my_data[10, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "October", my_data$`2020`[10]+total, my_data$`2020`[10]+0)
my_data[11, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "November", my_data$`2020`[11]+total, my_data$`2020`[11]+0)
my_data[12, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "December", my_data$`2020`[12]+total, my_data$`2020`[12]+0)
save_data <- my_data
saveRDS(save_data, file = paste0(mypath,"Afghanistan_floods_ggplot.Rdata"))
my_data[13, '2020'] <- date
data_date_afghanistan_floods <- my_data
write.xlsx(data_date_afghanistan_floods, paste0(mypath,"Afghanistan_floods.xlsx"), sheetName="Sheet1",
col.names=TRUE, row.names=TRUE, append=FALSE)
my_data <- my_data[-c(13), ]
my_data <- transform(my_data, `2020` = as.numeric(`2020`))
my_data <- my_data %>% dplyr::rename( "2012" =  "X2012", "2013" =  "X2013", "2014" =  "X2014", "2015" =  "X2015", "2016" =  "X2016", "2017" =  "X2017", "2018" =  "X2018", "2019" =  "X2019", "2020" =  "X2020")
means$ID<- as.character(means$ID)
my_data <- inner_join(my_data,means, by=c("Month"="ID"))
my_data$twelve_mean <- ifelse(my_data$`2012` > my_data$Above, 2,
ifelse(my_data$`2012` < my_data$Below, 0,
1))
my_data$thirten_mean <- ifelse(my_data$`2013` > my_data$Above, 2,
ifelse(my_data$`2013` < my_data$Below, 0,
1))
my_data$fourten_mean <- ifelse(my_data$`2014` > my_data$Above, 2,
ifelse(my_data$`2014` < my_data$Below, 0,
1))
my_data$fiveten_mean <- ifelse(my_data$`2015` > my_data$Above, 2,
ifelse(my_data$`2015` < my_data$Below, 0,
1))
my_data$sixten_mean <- ifelse(my_data$`2016` > my_data$Above, 2,
ifelse(my_data$`2016` < my_data$Below, 0,
1))
my_data$seventen_mean <- ifelse(my_data$`2017` > my_data$Above, 2,
ifelse(my_data$`2017` < my_data$Below, 0,
1))
my_data$eigthten_mean <- ifelse(my_data$`2018` > my_data$Above, 2,
ifelse(my_data$`2018` < my_data$Below, 0,
1))
my_data$nineten_mean <- ifelse(my_data$`2019` > my_data$Above, 2,
ifelse(my_data$`2019` < my_data$Below, 0,
1))
my_data$twente_mean <- ifelse(my_data$`2020` > my_data$Above, 2,
ifelse(my_data$`2020` < my_data$Below, 0,
1))
#save the processed data
my_data<- dplyr::select(my_data,-c(Means,Above,Below))
#last update date and new cases number into the last two rows. This will be used in rmarkdown
my_data[13,1]<-lastupdate
my_data[14,1]<-savenewcases
saveRDS(my_data, file = paste0(mypath,"afghanistan_floods.Rdata"))
#End of afghanistan_floods function
}
#Calling afghanistan_floods
tryCatchLog(afghanistan_floods(),error = function(e) {})
#' Creating a function to wrap Thailand floods extaction
#Begining of thailand_floods function
thailand_floods<- function(){
site <- "http://adinet.ahacentre.org/reports/"
my_data <- read_excel(paste0(mypath,"Thailand_flooding.xlsx"))
my_data[1] <- NULL
urls1 <- my_data %>% as.data.frame()
webpage <- read_html(site) %>% html_nodes("h3") %>% html_nodes("a") %>% grep('Thailand', ., value = T) %>% grep('Floods|floods|Flood|Flashflood|Flooding|flood|flashflood|flooding', ., value = T)
url_pattern <- "http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\\(\\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+"
urls <- str_extract(webpage, url_pattern)
urls <- urls[urls %in% urls1[,1] == FALSE]
urls<- (ifelse(is.empty(urls)==TRUE, "http://adinet.ahacentre.org/", urls))
scrape_test = function(link) {name <- link %>% read_html %>% html_nodes("tr")%>% html_text()
return(name)
}
d <- vector("list", length(urls))
for (i in seq_along(urls)) {
if (!(urls[i] %in% names(d))) {
cat(paste("Doing", urls[i], "..."))
ok <- FALSE
counter <- 0
while (ok == FALSE & counter <= 5) {
counter <- counter + 1
out <- tryCatch({
scrape_test(urls[i])
},
error = function(e) {
Sys.sleep(2)
e
}
)
if ("error" %in% class(out)) {
cat(".")
} else {
ok <- TRUE
cat(" Done.")
}
}
cat("\n")
d[[i]] <- out
names(d)[i] <- urls[i]
}
}
data1 <- d %>% map(. %>% grep('Affected Persons:', ., value = T))
data2 <- gsub(",","",data1)
data2 <- as.numeric(gsub("Affected Persons: ", "", data1))
data2[is.na(data2)] <- 0
data2 <- (ifelse(is.empty(data2)==TRUE, 0, data2))
scrape_test1 = function(link1) {name <- link1 %>% read_html %>% html_nodes('.r_date')%>% html_text()
return(name)
}
date <- vector("list", length(urls))
for (i in seq_along(urls)) {
if (!(urls[i] %in% names(date))) {
cat(paste("Doing", urls[i], "..."))
ok <- FALSE
counter <- 0
while (ok == FALSE & counter <= 5) {
counter <- counter + 1
out <- tryCatch({
scrape_test1(urls[i])
},
error = function(e) {
Sys.sleep(2)
e
}
)
if ("error" %in% class(out)) {
cat(".")
} else {
ok <- TRUE
cat(" Done.")
}
}
cat("\n")
date[[i]] <- out
names(date)[i] <- urls[i]
}
}
date1 <- (ifelse(urls=="http://adinet.ahacentre.org/", "", sapply(date, "[[", 1)))
month1 <- (ifelse(is.empty(date1)==TRUE, NA, strsplit(date1, " ")))
month2 <- (ifelse(is.na(month1)==TRUE, NA, sapply(month1, "[[", 2)))
data_name <- "Affected people"
month_name <- "Month"
df <- data.frame(data2,month2)
names(df) <- c(data_name,month_name)
total <- ddply(df, .(Month), summarise, 'New Cases' = sum(`Affected people`))
total
#If there are not cases what Date have no data then error
my_data <- read_excel(paste0(mypath,"Thailand_floods.xlsx"))
my_data[1] <- NULL
my_data <- transform(my_data, `2020` = as.numeric(`2020`))
my_data <- my_data %>% dplyr::rename( "2017" =  "X2017","2018" =  "X2018", "2019" =  "X2019", "2020" =  "X2020")
means <- data.frame(ID=my_data[,1], Means=rowMeans(my_data[,-1], na.rm=TRUE))
means <- means %>% mutate(Above = means$Means*1.25, Below = means$Means*0.75)
my_data[1, '2020'] <- my_data$`2020`[1]+sum(ifelse(total$Month == "Jan", total$`New Cases`, 0))
my_data[2, '2020'] <- my_data$`2020`[2]+sum(ifelse(total$Month == "Feb", total$`New Cases`, 0))
my_data[3, '2020'] <- my_data$`2020`[3]+sum(ifelse(total$Month == "Mar", total$`New Cases`, 0))
my_data[4, '2020'] <- my_data$`2020`[4]+sum(ifelse(total$Month == "Apr", total$`New Cases`, 0))
my_data[5, '2020'] <- my_data$`2020`[5]+sum(ifelse(total$Month == "May", total$`New Cases`, 0))
my_data[6, '2020'] <- my_data$`2020`[6]+sum(ifelse(total$Month == "Jun", total$`New Cases`, 0))
my_data[7, '2020'] <- my_data$`2020`[7]+sum(ifelse(total$Month == "Jul", total$`New Cases`, 0))
my_data[8, '2020'] <- my_data$`2020`[8]+sum(ifelse(total$Month == "Aug", total$`New Cases`, 0))
my_data[9, '2020'] <- my_data$`2020`[9]+sum(ifelse(total$Month == "Sep", total$`New Cases`, 0))
my_data[10, '2020'] <- my_data$`2020`[10]+sum(ifelse(total$Month == "Oct", total$`New Cases`, 0))
my_data[11, '2020'] <- my_data$`2020`[11]+sum(ifelse(total$Month == "Nov", total$`New Cases`, 0))
my_data[12, '2020'] <- my_data$`2020`[12]+sum(ifelse(total$Month == "Dec", total$`New Cases`, 0))
save_my_data <- my_data
saveRDS(save_my_data, file = paste0(mypath,"Thailand_floods_ggplot.Rdata"))
#We rewrite the Excel file to include the new number of cases and the date
write.xlsx(save_my_data, paste0(mypath,"Thailand_floods.xlsx"), sheetName="Sheet1",
col.names=TRUE, row.names=TRUE, append=FALSE)
urls <- as.data.frame(urls)
colnames(urls) <- c("x")
urls <- merge(urls, urls1, by = "x", all = TRUE)
write.xlsx(urls, paste0(mypath,"Thailand_flooding.xlsx"), sheetName="Sheet1", col.names=TRUE, row.names=TRUE, append=FALSE)
#convert to similar class before joining
means$ID<- as.character(means$ID)
my_data <- inner_join(save_my_data,means, by=c("Month"="ID"))
my_data$seventen_mean <- ifelse(my_data$`2017` > my_data$Above, 2,
ifelse(my_data$`2017` < my_data$Below, 0,
1))
my_data$eigthten_mean <- ifelse(my_data$`2018` > my_data$Above, 2,
ifelse(my_data$`2018` < my_data$Below, 0,
1))
my_data$nineten_mean <- ifelse(my_data$`2019` > my_data$Above, 2,
ifelse(my_data$`2019` < my_data$Below, 0,
1))
my_data$twente_mean <- ifelse(my_data$`2020` > my_data$Above, 2,
ifelse(my_data$`2020` < my_data$Below, 0,
1))
#save the processed data
my_data<- dplyr::select(my_data,-c(Means,Above,Below))
#last update date and new cases number into the last two rows. This will be used in rmarkdown
my_data[13,1]<-paste("Last update: ", as.character(total$Month))
my_data[14,1]<-paste("New Cases: ", total[2])
saveRDS(my_data, file = paste0(mypath,"Thailand_floods.Rdata"))
#end of thailand_floods function
}
#Calling thailand_floods function inside trycatchlog
tryCatchLog(thailand_floods(),error = function(e) {})
web <- "https://afghanistan.iom.int/sites/default/files/Reports/iom-hap-biweekly_report_29_april_to_12_may_2020_0.pdf
"
date1 <- pdf_text(web)[1] %>% str_split("\r\n", simplify = TRUE)
date2 <- match(date1  %>% grep('Period:', ., value = T), date1)
#Trim the space first before splitting the string
#date <- date1[,date2+1] %>% trimws() %>% str_split("              ", simplify = TRUE)
date <- date1[,date2+1] %>% str_split("\\s{2,}", simplify = TRUE) %>% last() %>% trimws()
month1 <- date %>% str_split(" ", simplify = TRUE)
month2 <- month1[2]
month2
lastupdate<-paste("Last update: ", date)
data1 <- pdf_text(web)
data2 <- match(data1 %>% grep('Natural Disaster Initial Incident Information Summary', ., value = T), data1)
data3 <- data1[data2] %>% str_split("\r\n", simplify = TRUE) %>% grep('Flood ', ., value = T)
data4 <- gsub("(?<=[\\s])\\s*|^\\s+|\\s+$", "", data3, perl=TRUE)
data5 <- data4 %>% map(. %>% str_match("Flood.* (.*?)"))
data6 <- data5 %>% map(. %>% str_split(" ", simplify = TRUE))
data7 <- sapply(data6, "[[", 5)
data8 <- gsub(",","",data7)
total <- as.numeric(data8) %>% sum
my_data <- read_excel(paste0(mypath,"Afghanistan_floods.xlsx"))
my_data[1] <- NULL
total
my_data_date <- my_data
new_cases <- ifelse(date != my_data_date[13,10], total, 0)
savenewcases<-paste("New Cases: ", new_cases)
my_data <- my_data[-c(13), ]
my_data <- transform(my_data, `2020` = as.numeric(`2020`))
my_data <- my_data %>% dplyr::rename( "2012" =  "X2012", "2013" =  "X2013", "2014" =  "X2014", "2015" =  "X2015", "2016" =  "X2016", "2017" =  "X2017", "2018" =  "X2018", "2019" =  "X2019", "2020" =  "X2020")
means <- data.frame(ID=my_data[,1], Means=rowMeans(my_data[,-1], na.rm=TRUE))
means <- means %>% mutate(Above = means$Means*1.25, Below = means$Means*0.75)
my_data <- as.data.frame(my_data)
my_data[1, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "January", my_data$`2020`[1]+total, my_data$`2020`[1]+0)
my_data[2, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "February", my_data$`2020`[2]+total, my_data$`2020`[2]+0)
my_data[3, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "March", my_data$`2020`[3]+total, my_data$`2020`[3]+0)
my_data[4, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "April", my_data$`2020`[4]+total, my_data$`2020`[4]+0)
my_data[5, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "May", my_data$`2020`[5]+total, my_data$`2020`[5]+0)
my_data[6, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "Jun", my_data$`2020`[6]+total, my_data$`2020`[6]+0)
my_data[7, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "July", my_data$`2020`[7]+total, my_data$`2020`[7]+0)
my_data[8, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "August", my_data$`2020`[8]+total, my_data$`2020`[8]+0)
my_data[9, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "September", my_data$`2020`[9]+total, my_data$`2020`[9]+0)
my_data[10, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "October", my_data$`2020`[10]+total, my_data$`2020`[10]+0)
my_data[11, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "November", my_data$`2020`[11]+total, my_data$`2020`[11]+0)
my_data[12, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "December", my_data$`2020`[12]+total, my_data$`2020`[12]+0)
save_data <- my_data
save_data
saveRDS(save_data, file = paste0(mypath,"Afghanistan_floods_ggplot.Rdata"))
my_data[13, '2020'] <- date
data_date_afghanistan_floods <- my_data
write.xlsx(data_date_afghanistan_floods, paste0(mypath,"Afghanistan_floods.xlsx"), sheetName="Sheet1",
col.names=TRUE, row.names=TRUE, append=FALSE)
my_data <- my_data[-c(13), ]
my_data <- transform(my_data, `2020` = as.numeric(`2020`))
my_data <- my_data %>% dplyr::rename( "2012" =  "X2012", "2013" =  "X2013", "2014" =  "X2014", "2015" =  "X2015", "2016" =  "X2016", "2017" =  "X2017", "2018" =  "X2018", "2019" =  "X2019", "2020" =  "X2020")
means$ID<- as.character(means$ID)
my_data <- inner_join(my_data,means, by=c("Month"="ID"))
my_data$twelve_mean <- ifelse(my_data$`2012` > my_data$Above, 2,
ifelse(my_data$`2012` < my_data$Below, 0,
1))
my_data$thirten_mean <- ifelse(my_data$`2013` > my_data$Above, 2,
ifelse(my_data$`2013` < my_data$Below, 0,
1))
my_data$fourten_mean <- ifelse(my_data$`2014` > my_data$Above, 2,
ifelse(my_data$`2014` < my_data$Below, 0,
1))
my_data$fiveten_mean <- ifelse(my_data$`2015` > my_data$Above, 2,
ifelse(my_data$`2015` < my_data$Below, 0,
1))
my_data$sixten_mean <- ifelse(my_data$`2016` > my_data$Above, 2,
ifelse(my_data$`2016` < my_data$Below, 0,
1))
my_data$seventen_mean <- ifelse(my_data$`2017` > my_data$Above, 2,
ifelse(my_data$`2017` < my_data$Below, 0,
1))
my_data$eigthten_mean <- ifelse(my_data$`2018` > my_data$Above, 2,
ifelse(my_data$`2018` < my_data$Below, 0,
1))
my_data$nineten_mean <- ifelse(my_data$`2019` > my_data$Above, 2,
ifelse(my_data$`2019` < my_data$Below, 0,
1))
my_data$twente_mean <- ifelse(my_data$`2020` > my_data$Above, 2,
ifelse(my_data$`2020` < my_data$Below, 0,
1))
#save the processed data
my_data<- dplyr::select(my_data,-c(Means,Above,Below))
#last update date and new cases number into the last two rows. This will be used in rmarkdown
my_data[13,1]<-lastupdate
my_data[14,1]<-savenewcases
saveRDS(my_data, file = paste0(mypath,"afghanistan_floods.Rdata"))
web <- "https://afghanistan.iom.int/sites/default/files/Reports/iom-hap-biweekly_report_13_may_to_02_jun_2020.pdf"
date1 <- pdf_text(web)[1] %>% str_split("\r\n", simplify = TRUE)
date2 <- match(date1  %>% grep('Period:', ., value = T), date1)
#Trim the space first before splitting the string
#date <- date1[,date2+1] %>% trimws() %>% str_split("              ", simplify = TRUE)
date <- date1[,date2+1] %>% str_split("\\s{2,}", simplify = TRUE) %>% last() %>% trimws()
month1 <- date %>% str_split(" ", simplify = TRUE)
month2 <- month1[2]
lastupdate<-paste("Last update: ", date)
data1 <- pdf_text(web)
data2 <- match(data1 %>% grep('Natural Disaster Initial Incident Information Summary', ., value = T), data1)
data3 <- data1[data2] %>% str_split("\r\n", simplify = TRUE) %>% grep('Flood ', ., value = T)
data4 <- gsub("(?<=[\\s])\\s*|^\\s+|\\s+$", "", data3, perl=TRUE)
data5 <- data4 %>% map(. %>% str_match("Flood.* (.*?)"))
data6 <- data5 %>% map(. %>% str_split(" ", simplify = TRUE))
data7 <- sapply(data6, "[[", 5)
data8 <- gsub(",","",data7)
total <- as.numeric(data8) %>% sum
my_data <- read_excel(paste0(mypath,"Afghanistan_floods.xlsx"))
my_data[1] <- NULL
my_data_date <- my_data
total
new_cases <- ifelse(date != my_data_date[13,10], total, 0)
savenewcases<-paste("New Cases: ", new_cases)
my_data <- my_data[-c(13), ]
my_data <- transform(my_data, `2020` = as.numeric(`2020`))
my_data <- my_data %>% dplyr::rename( "2012" =  "X2012", "2013" =  "X2013", "2014" =  "X2014", "2015" =  "X2015", "2016" =  "X2016", "2017" =  "X2017", "2018" =  "X2018", "2019" =  "X2019", "2020" =  "X2020")
means <- data.frame(ID=my_data[,1], Means=rowMeans(my_data[,-1], na.rm=TRUE))
means <- means %>% mutate(Above = means$Means*1.25, Below = means$Means*0.75)
my_data <- as.data.frame(my_data)
my_data[1, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "January", my_data$`2020`[1]+total, my_data$`2020`[1]+0)
my_data[2, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "February", my_data$`2020`[2]+total, my_data$`2020`[2]+0)
my_data[3, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "March", my_data$`2020`[3]+total, my_data$`2020`[3]+0)
my_data[4, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "April", my_data$`2020`[4]+total, my_data$`2020`[4]+0)
my_data[5, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "May", my_data$`2020`[5]+total, my_data$`2020`[5]+0)
my_data[6, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "Jun", my_data$`2020`[6]+total, my_data$`2020`[6]+0)
my_data[7, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "July", my_data$`2020`[7]+total, my_data$`2020`[7]+0)
my_data[8, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "August", my_data$`2020`[8]+total, my_data$`2020`[8]+0)
my_data[9, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "September", my_data$`2020`[9]+total, my_data$`2020`[9]+0)
my_data[10, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "October", my_data$`2020`[10]+total, my_data$`2020`[10]+0)
my_data[11, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "November", my_data$`2020`[11]+total, my_data$`2020`[11]+0)
my_data[12, '2020'] <- ifelse(date != my_data_date[13,10] & month2 == "December", my_data$`2020`[12]+total, my_data$`2020`[12]+0)
save_data <- my_data
save_data
saveRDS(save_data, file = paste0(mypath,"Afghanistan_floods_ggplot.Rdata"))
my_data[13, '2020'] <- date
data_date_afghanistan_floods <- my_data
write.xlsx(data_date_afghanistan_floods, paste0(mypath,"Afghanistan_floods.xlsx"), sheetName="Sheet1",
col.names=TRUE, row.names=TRUE, append=FALSE)
web <- "https://afghanistan.iom.int/sites/default/files/Reports/iom-hap-biweekly_report_03_jun_to_16_jun_2020.pdf"
date1 <- pdf_text(web)[1] %>% str_split("\r\n", simplify = TRUE)
date2 <- match(date1  %>% grep('Period:', ., value = T), date1)
#Trim the space first before splitting the string
#date <- date1[,date2+1] %>% trimws() %>% str_split("              ", simplify = TRUE)
date <- date1[,date2+1] %>% str_split("\\s{2,}", simplify = TRUE) %>% last() %>% trimws()
month1 <- date %>% str_split(" ", simplify = TRUE)
month2 <- month1[2]
lastupdate<-paste("Last update: ", date)
data1 <- pdf_text(web)
data2 <- match(data1 %>% grep('Natural Disaster Initial Incident Information Summary', ., value = T), data1)
data3 <- data1[data2] %>% str_split("\r\n", simplify = TRUE) %>% grep('Flood ', ., value = T)
data4 <- gsub("(?<=[\\s])\\s*|^\\s+|\\s+$", "", data3, perl=TRUE)
data5 <- data4 %>% map(. %>% str_match("Flood.* (.*?)"))
data6 <- data5 %>% map(. %>% str_split(" ", simplify = TRUE))
data7 <- sapply(data6, "[[", 5)
data8 <- gsub(",","",data7)
total <- as.numeric(data8) %>% sum
my_data <- read_excel(paste0(mypath,"Afghanistan_floods.xlsx"))
my_data[1] <- NULL
my_data_date <- my_data
new_cases <- ifelse(date != my_data_date[13,10], total, 0)
savenewcases<-paste("New Cases: ", new_cases)
total
